import java.util.ArrayList;
import java.util.List;

public class Heapsort {

	public static void main(String[] args) {
		

		List<Integer> test = new ArrayList<Integer>();
		test.add(5);
		test.add(2);
		test.add(8);
		test.add(10);
		test.add(1);
		sort(test);
		
		for(int i = 0; i < test.size(); i++) {
			System.out.println(test.get(i));
		}

	}
	
	
	public static <T extends Comparable<? super T> > void sort(List<T> array) {
		
		int n = array.size();
		
        // Build heap (rearrange array) 
		for (int i = n / 2 - 1; i >= 0; i--) {
            heapify(array, n, i); 
		}
  
        // One by one extract an element from heap 
        for (int i=n-1; i>=0; i--) 
        { 
            // Move current root to end 
            int temp = arr[0]; 
            arr[0] = arr[i]; 
            arr[i] = temp; 
  
            // call max heapify on the reduced heap 
            heapify(arr, i, 0); 
        }
		
	}
		
	private static <T extends Comparable<? super T> > void heapify(List<T> array, int n, int i) {
	
	
		
	
}
